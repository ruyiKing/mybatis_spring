<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ry.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="ry.model.User" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="LOGIN_NAME" property="login_name" jdbcType="VARCHAR"/>
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="PWD" property="pwd" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, NAME, PWD, CREATE_TIME, UPDATE_TIME
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from TUSER
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from TUSER
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="ry.model.User" >
    insert into TUSER (ID,LOGIN_NAME, NAME, 
      PWD, CREATE_TIME, UPDATE_TIME
      )
    values (#{id,jdbcType=VARCHAR}, (#{login_name,jdbcType=VARCHAR}, #{jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR}, 
      #{pwd,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="ry.model.User" >
    insert into TUSER
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="login_name != null" >
        LOGIN_NAME,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="pwd != null" >
        PWD,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="login_name != null" >
        #{login_name,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="ry.model.User" >
    update TUSER
    <set >
      <if test="login_name != null" >
        LOGIN_NAME = #{login_name,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        PWD = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="ry.model.User" >
    update TUSER
    set LOGIN_NAME = #{login_name,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      PWD = #{pwd,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  
  <select id="selectUserRole" parameterType="String" resultType="ry.model.UserRole">
  select
		tuser_trole. id,
		tuser_trole.role_id,
		tuser_trole.user_id
	from
		tuser_trole
	where TUSER_TROLE.user_id =#{id,jdbcType=VARCHAR} 
  </select>
  
  <resultMap id="userResultMap" type="ry.model.User" extends="BaseResultMap" >
    <collection property="userRoles" column="ID" javaType="list" select="selectUserRole"></collection>
  </resultMap>
  
  <select id="getAll" resultMap="userResultMap">
  select * from tuser
  </select>
  
  <select id="getAll2" resultMap="userResultMap2">
	  select
		tuser.id,
		tuser.login_name
		tuser.name,
		tuser.pwd,
		tuser.create_time,
		tuser.update_time,
		tuser_trole.id tuser_trole_id,
		tuser_trole.role_id role_id,
		tuser_trole.user_id user_id,
		trole.id trole_id,
		trole.text trole_text
	from
		tuser
	inner join tuser_trole on tuser_trole.user_id = tuser.id
	inner join trole on tuser_trole.role_id = trole.id
  </select>
  <resultMap type="ry.model.User" id="userResultMap2" extends="BaseResultMap">
  	<collection property="userRoles" javaType="list" ofType="ry.model.UserRole">
  		<id property="id" column="tuser_trole_id"/>
  		<result property="roleId" column="role_id"/>
  		<result property="userId" column="user_id"/>
  		<association property="role" javaType="ry.model.Role">
  			<id property="id" column="trole_id"/>
  			<result property="text" column="trole_text"/>
  		</association>
  	</collection>
  </resultMap>
</mapper>